program number_reverser.aleo;



function reverse:
    input r0 as i128.public;
    lt r0 0i128 into r1;
    ternary r1 -10i128 10i128 into r2;
    gt r0 0i128 into r3;
    rem r0 r2 into r4;
    mul 0i128 10i128 into r5;
    add r5 r4 into r6;
    div r0 r2 into r7;
    ternary r3 r6 0i128 into r8;
    ternary r3 r7 r0 into r9;
    gt r9 0i128 into r10;
    rem r9 r2 into r11;
    mul r8 10i128 into r12;
    add r12 r11 into r13;
    div r9 r2 into r14;
    ternary r10 r13 r8 into r15;
    ternary r10 r14 r9 into r16;
    gt r16 0i128 into r17;
    rem r16 r2 into r18;
    mul r15 10i128 into r19;
    add r19 r18 into r20;
    div r16 r2 into r21;
    ternary r17 r20 r15 into r22;
    ternary r17 r21 r16 into r23;
    gt r23 0i128 into r24;
    rem r23 r2 into r25;
    mul r22 10i128 into r26;
    add r26 r25 into r27;
    div r23 r2 into r28;
    ternary r24 r27 r22 into r29;
    ternary r24 r28 r23 into r30;
    gt r30 0i128 into r31;
    rem r30 r2 into r32;
    mul r29 10i128 into r33;
    add r33 r32 into r34;
    div r30 r2 into r35;
    ternary r31 r34 r29 into r36;
    ternary r31 r35 r30 into r37;
    gt r37 0i128 into r38;
    rem r37 r2 into r39;
    mul r36 10i128 into r40;
    add r40 r39 into r41;
    div r37 r2 into r42;
    ternary r38 r41 r36 into r43;
    ternary r38 r42 r37 into r44;
    gt r44 0i128 into r45;
    rem r44 r2 into r46;
    mul r43 10i128 into r47;
    add r47 r46 into r48;
    div r44 r2 into r49;
    ternary r45 r48 r43 into r50;
    ternary r45 r49 r44 into r51;
    gt r51 0i128 into r52;
    rem r51 r2 into r53;
    mul r50 10i128 into r54;
    add r54 r53 into r55;
    div r51 r2 into r56;
    ternary r52 r55 r50 into r57;
    ternary r52 r56 r51 into r58;
    gt r58 0i128 into r59;
    rem r58 r2 into r60;
    mul r57 10i128 into r61;
    add r61 r60 into r62;
    div r58 r2 into r63;
    ternary r59 r62 r57 into r64;
    ternary r59 r63 r58 into r65;
    gt r65 0i128 into r66;
    rem r65 r2 into r67;
    mul r64 10i128 into r68;
    add r68 r67 into r69;
    div r65 r2 into r70;
    ternary r66 r69 r64 into r71;
    ternary r66 r70 r65 into r72;
    gt r72 0i128 into r73;
    rem r72 r2 into r74;
    mul r71 10i128 into r75;
    add r75 r74 into r76;
    div r72 r2 into r77;
    ternary r73 r76 r71 into r78;
    ternary r73 r77 r72 into r79;
    gt r79 0i128 into r80;
    rem r79 r2 into r81;
    mul r78 10i128 into r82;
    add r82 r81 into r83;
    div r79 r2 into r84;
    ternary r80 r83 r78 into r85;
    ternary r80 r84 r79 into r86;
    gt r86 0i128 into r87;
    rem r86 r2 into r88;
    mul r85 10i128 into r89;
    add r89 r88 into r90;
    div r86 r2 into r91;
    ternary r87 r90 r85 into r92;
    ternary r87 r91 r86 into r93;
    gt r93 0i128 into r94;
    rem r93 r2 into r95;
    mul r92 10i128 into r96;
    add r96 r95 into r97;
    div r93 r2 into r98;
    ternary r94 r97 r92 into r99;
    ternary r94 r98 r93 into r100;
    gt r100 0i128 into r101;
    rem r100 r2 into r102;
    mul r99 10i128 into r103;
    add r103 r102 into r104;
    div r100 r2 into r105;
    ternary r101 r104 r99 into r106;
    ternary r101 r105 r100 into r107;
    gt r107 0i128 into r108;
    rem r107 r2 into r109;
    mul r106 10i128 into r110;
    add r110 r109 into r111;
    div r107 r2 into r112;
    ternary r108 r111 r106 into r113;
    ternary r108 r112 r107 into r114;
    gt r114 0i128 into r115;
    rem r114 r2 into r116;
    mul r113 10i128 into r117;
    add r117 r116 into r118;
    div r114 r2 into r119;
    ternary r115 r118 r113 into r120;
    ternary r115 r119 r114 into r121;
    gt r121 0i128 into r122;
    rem r121 r2 into r123;
    mul r120 10i128 into r124;
    add r124 r123 into r125;
    div r121 r2 into r126;
    ternary r122 r125 r120 into r127;
    ternary r122 r126 r121 into r128;
    gt r128 0i128 into r129;
    rem r128 r2 into r130;
    mul r127 10i128 into r131;
    add r131 r130 into r132;
    div r128 r2 into r133;
    ternary r129 r132 r127 into r134;
    ternary r129 r133 r128 into r135;
    gt r135 0i128 into r136;
    rem r135 r2 into r137;
    mul r134 10i128 into r138;
    add r138 r137 into r139;
    div r135 r2 into r140;
    ternary r136 r139 r134 into r141;
    ternary r136 r140 r135 into r142;
    gt r142 0i128 into r143;
    rem r142 r2 into r144;
    mul r141 10i128 into r145;
    add r145 r144 into r146;
    div r142 r2 into r147;
    ternary r143 r146 r141 into r148;
    ternary r143 r147 r142 into r149;
    gt r149 0i128 into r150;
    rem r149 r2 into r151;
    mul r148 10i128 into r152;
    add r152 r151 into r153;
    div r149 r2 into r154;
    ternary r150 r153 r148 into r155;
    ternary r150 r154 r149 into r156;
    gt r156 0i128 into r157;
    rem r156 r2 into r158;
    mul r155 10i128 into r159;
    add r159 r158 into r160;
    div r156 r2 into r161;
    ternary r157 r160 r155 into r162;
    ternary r157 r161 r156 into r163;
    gt r163 0i128 into r164;
    rem r163 r2 into r165;
    mul r162 10i128 into r166;
    add r166 r165 into r167;
    div r163 r2 into r168;
    ternary r164 r167 r162 into r169;
    ternary r164 r168 r163 into r170;
    gt r170 0i128 into r171;
    rem r170 r2 into r172;
    mul r169 10i128 into r173;
    add r173 r172 into r174;
    div r170 r2 into r175;
    ternary r171 r174 r169 into r176;
    ternary r171 r175 r170 into r177;
    gt r177 0i128 into r178;
    rem r177 r2 into r179;
    mul r176 10i128 into r180;
    add r180 r179 into r181;
    div r177 r2 into r182;
    ternary r178 r181 r176 into r183;
    ternary r178 r182 r177 into r184;
    gt r184 0i128 into r185;
    rem r184 r2 into r186;
    mul r183 10i128 into r187;
    add r187 r186 into r188;
    div r184 r2 into r189;
    ternary r185 r188 r183 into r190;
    ternary r185 r189 r184 into r191;
    gt r191 0i128 into r192;
    rem r191 r2 into r193;
    mul r190 10i128 into r194;
    add r194 r193 into r195;
    div r191 r2 into r196;
    ternary r192 r195 r190 into r197;
    ternary r192 r196 r191 into r198;
    gt r198 0i128 into r199;
    rem r198 r2 into r200;
    mul r197 10i128 into r201;
    add r201 r200 into r202;
    div r198 r2 into r203;
    ternary r199 r202 r197 into r204;
    ternary r199 r203 r198 into r205;
    gt r205 0i128 into r206;
    rem r205 r2 into r207;
    mul r204 10i128 into r208;
    add r208 r207 into r209;
    div r205 r2 into r210;
    ternary r206 r209 r204 into r211;
    ternary r206 r210 r205 into r212;
    gt r212 0i128 into r213;
    rem r212 r2 into r214;
    mul r211 10i128 into r215;
    add r215 r214 into r216;
    div r212 r2 into r217;
    ternary r213 r216 r211 into r218;
    ternary r213 r217 r212 into r219;
    gt r219 0i128 into r220;
    rem r219 r2 into r221;
    mul r218 10i128 into r222;
    add r222 r221 into r223;
    div r219 r2 into r224;
    ternary r220 r223 r218 into r225;
    ternary r220 r224 r219 into r226;
    gt r226 0i128 into r227;
    rem r226 r2 into r228;
    mul r225 10i128 into r229;
    add r229 r228 into r230;
    div r226 r2 into r231;
    ternary r227 r230 r225 into r232;
    ternary r227 r231 r226 into r233;
    gt r233 0i128 into r234;
    rem r233 r2 into r235;
    mul r232 10i128 into r236;
    add r236 r235 into r237;
    div r233 r2 into r238;
    ternary r234 r237 r232 into r239;
    ternary r234 r238 r233 into r240;
    gt r240 0i128 into r241;
    rem r240 r2 into r242;
    mul r239 10i128 into r243;
    add r243 r242 into r244;
    div r240 r2 into r245;
    ternary r241 r244 r239 into r246;
    ternary r241 r245 r240 into r247;
    gt r247 0i128 into r248;
    rem r247 r2 into r249;
    mul r246 10i128 into r250;
    add r250 r249 into r251;
    div r247 r2 into r252;
    ternary r248 r251 r246 into r253;
    ternary r248 r252 r247 into r254;
    gt r254 0i128 into r255;
    rem r254 r2 into r256;
    mul r253 10i128 into r257;
    add r257 r256 into r258;
    div r254 r2 into r259;
    ternary r255 r258 r253 into r260;
    ternary r255 r259 r254 into r261;
    gt r261 0i128 into r262;
    rem r261 r2 into r263;
    mul r260 10i128 into r264;
    add r264 r263 into r265;
    div r261 r2 into r266;
    ternary r262 r265 r260 into r267;
    ternary r262 r266 r261 into r268;
    gt r268 0i128 into r269;
    rem r268 r2 into r270;
    mul r267 10i128 into r271;
    add r271 r270 into r272;
    div r268 r2 into r273;
    ternary r269 r272 r267 into r274;
    ternary r269 r273 r268 into r275;
    output r274 as i128.private;
